stages:
  - build
  - test
  - deploy review

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - my_cash/


dev build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  when: manual
  script:
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "NODE_ENV = \"development\"" >> ./.env
    - /kaniko/executor --context ./ --dockerfile ./Dockerfile --destination $CI_REGISTRY_IMAGE/dev:$CI_COMMIT_TAG
  only:
    #- merge_request
    - develop


dev deploy:
  stage: deploy review
  script:
    - echo "Deploy review front"
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - docker info
    - if docker ps -a |grep -q limcore-frontend; then docker rm -f limcore-frontend; fi
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull registry.gitlab.com/auditor2/production/frontend/limcore.io/dev
    - docker run -d -p 8084:8080  --network backend_default --hostname limcore-frontend --name limcore-frontend --rm registry.gitlab.com/auditor2/production/frontend/limcore.io/dev:latest
    - echo 'y' | docker system prune
  when: manual
  tags:
    - limcore-front-dev
  only:
    #- merge_request
    - develop

prod build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  when: manual
  script:
    - mkdir -p /kaniko/.docker
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "NODE_ENV = \"development\"" >> ./.env
    - /kaniko/executor --context ./ --dockerfile ./Dockerfile --destination $CI_REGISTRY_IMAGE/prod:$CI_COMMIT_TAG
  tags:
    - limcore-aws-build
  only:
    - master


prod deploy:
  stage: deploy review
  script:
    - echo "Deploy review front"
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_USER
    - echo $CI_REGISTRY_PASSWORD
    - docker info
    - if docker ps -a |grep -q limcore-frontend; then docker rm -f limcore-frontend; fi
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
    - docker pull registry.gitlab.com/auditor2/production/frontend/limcore.io/prod
    - docker run -d -p 80:3000  --network backend_backend --hostname limcore-frontend --name limcore-frontend --rm registry.gitlab.com/auditor2/production/frontend/limcore.io/prod:latest
    - echo 'y' | docker system prune
  when: manual
  tags:
    - limcore-front-prod
  only:
    - master
